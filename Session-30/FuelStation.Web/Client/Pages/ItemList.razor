@page "/itemlist"
@using FuelStation.Web.Shared;
@using FuelStation.Web.Shared.Item;
@using PetShop.Web.Blazor.Client.Shared;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime


<h3>Item Managment </h3>


@if (isLoading)
{
    <LoadingSpinner Type="LoadingSpinnerType.Border" />
}
else
{
    <button class="btn btn-primary" @onclick="()=> CreateItem()">Create</button>

    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Code</th>
                <th>Description</th>
                <th>Item Type</th>
                <th>Price</th>
                <th>Cost</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in itemList)
            {
                <tr>
                    <td>@item.Code</td>
                    <td>@item.Description</td>
                    <th>@item.ItemType</th>
                    <th>@item.Price</th>
                    <th>@item.Cost</th>

                    <td>
                        <button class="btn btn-primary" @onclick="()=> EditItem(item)">Edit</button>
                        <button class="btn btn-danger" @onclick="()=> DeleteItem(item)">Delete</button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}


@code {
    private List<ItemDto> itemList = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer()
    {
        itemList = await httpClient.GetFromJsonAsync<List<ItemDto>>("item");
    }

    private async Task CreateItem()
    {
        navigationManager.NavigateTo("itemlist/add");
    }

    private async Task EditItem(ItemDto item)
    {
        navigationManager.NavigateTo($"itemlist/edit/{item.Id}");
    }

    private async Task DeleteItem(ItemDto item)
    {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Delete Item. Are you sure?");
        if (confirm)
        {
            var response = await httpClient.DeleteAsync($"item/{item.Id}");
            response.EnsureSuccessStatusCode();
            await LoadItemsFromServer();
        }
    }
}