@page "/employeelist/add"
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@using FuelStation.Enums;
@using FuelStation.Web.Shared;
@using FuelStation.Web.Shared.Employee;

<h3>Add new Employee</h3>

<EditForm Model="Employee" OnValidSubmit="OnCreate">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="col-md-6">
        <label class="form-label">Name</label>
        <InputText class="form-control" id="name" @bind-Value="Employee.Name" />
        <ValidationMessage For="@(() => Employee.Name)" />
    </div>
    <div class="col-md-6">
        <label class="form-label">Surname</label>
        <InputText class="form-control" id="surname" @bind-Value="Employee.Surname" />
        <ValidationMessage For="@(() => Employee.Surname)" />
    </div>

    <div class="col-md-6">
        <label class="form-label">Hire Date Start</label>
        <input type="date" class="form-control" @bind="@Employee.HireDateStart" />
    </div>
    <div class="col-md-6">
        <label class="form-label">Hire Date End</label>
        <input type="date" class="form-control" @bind="@Employee.HireDateEnd" />
    </div>

   
    <div class="col-md-6">
        <label class="form-label">Salary Per Month</label>
        <input class="form-control" id="sallaryPerMonth" @bind="Employee.SallaryPerMonth" />

    </div>
    <div class="row">
        <div class="col-md-6">
            <label class="form-label">Employee Type</label>
            <InputSelect class="form-control" @bind-Value="Employee.EmployeeType">
                @foreach (var enumValue in Enum.GetValues<EmployeeType>())
                {
                    <option value="@enumValue">@enumValue</option>
                }
            </InputSelect>
        </div>
    </div>

   



    <div class="row mt-2">
        <div class="col">
            <button class="btn btn-success" type="submit">Add new Employee</button>
            <button class="btn btn-danger" @onclick="OnCancel">Cancel</button>
        </div>
    </div>
</EditForm>

@code {
    EmployeeCreateDto Employee { get; set; } = new(){HireDateStart=DateTime.Now};
    bool isLoading = true;

    private void OnCancel()
    {
        navigationManager.NavigateTo("employeelist");
    }
    private async Task OnCreate()
    {
        HttpResponseMessage? response;
        response = await httpClient.PostAsJsonAsync("employee", Employee);
        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("employeelist");
    }
}
